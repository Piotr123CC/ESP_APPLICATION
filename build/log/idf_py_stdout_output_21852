[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Piotr\Desktop\ESP_REPO\udemy_esp32\build\bootloader\esp-idf\esptool_py && python C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/Piotr/Desktop/ESP_REPO/udemy_esp32/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/rgb_led.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable udemy_esp32_app.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/Piotr/Desktop/ESP_REPO/udemy_esp32/build/udemy_esp32_app.bin
[8/9] cmd.exe /C "cd /D C:\Users\Piotr\Desktop\ESP_REPO\udemy_esp32\build\esp-idf\esptool_py && python C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Piotr/Desktop/ESP_REPO/udemy_esp32/build/partition_table/partition-table.bin C:/Users/Piotr/Desktop/ESP_REPO/udemy_esp32/build/udemy_esp32_app.bin"
udemy_esp32_app.bin binary size 0x2cb60 bytes. Smallest app partition is 0x100000 bytes. 0xd34a0 bytes (83%) free.
[8/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.1.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.1.1 -D SERIAL_TOOL=python;;C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Piotr/Desktop/ESP_REPO/udemy_esp32/build -P C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 udemy_esp32_app.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev2
Serial port COM5
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: f0:08:d1:d3:e8:10
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16691...
Writing at 0x00001000... (50 %)
Writing at 0x0000768a... (100 %)
Wrote 26640 bytes (16691 compressed) at 0x00001000 in 0.7 seconds (effective 290.9 kbit/s)...
Hash of data verified.
Compressed 183136 bytes to 101485...
Writing at 0x00010000... (14 %)
Writing at 0x0001c69a... (28 %)
Writing at 0x00021f21... (42 %)
Writing at 0x00027b8b... (57 %)
Writing at 0x0002de21... (71 %)
Writing at 0x00035b4c... (85 %)
Writing at 0x0003b792... (100 %)
Wrote 183136 bytes (101485 compressed) at 0x00010000 in 2.7 seconds (effective 545.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 362.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
